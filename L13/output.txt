from                                             2
abc                                              1
import                                           2
ABC,                                             1
abstractmethod                                   1
class                                           10
AbstractReader(ABC):                             1
@abstractmethod                                  3
def                                             13
read(self,                                       1
*args,                                           1
**kwargs):                                       1
pass                                             3
AbstractConverter(ABC):                          1
convert(self,                                    3
data):                                           6
AbstractWriter(ABC):                             1
write(self,                                      3
ConsoleReader(AbstractReader):                   1
read(self):                                      2
return                                           4
input("Input                                     1
data:")                                          1
FileReader(AbstractReader):                      1
__init__(self,                                   3
file_path):                                      2
self.file_path                                   2
=                                               14
file_path                                        2
with                                             2
open(self.file_path)                             1
as                                               2
f:                                               2
f.read()                                         1
ConsoleWriter(AbstractWriter):                   1
print(data)                                      1
FileWriter(AbstractWriter):                      1
open(self.file_path,                             1
'w')                                             1
f.write(data)                                    1
AddLengthConverter(AbstractConverter):           1
print(f"DBG:                                     1
{data}")                                         1
converted_data                                   5
f"{data}\tLEN:{len(data)}"                       1
DistinctWordSplitConverter(AbstractConverter):   1
collections                                      1
Counter                                          1
counter                                          1
Counter(data.split())                            1
max_length_key                                   1
len(max(counter.keys(),                          1
key=len))                                        1
output_list                                      1
[]                                               1
for                                              1
k                                                1
in                                               1
counter:                                         1
output_list.append(f"{k:                         1
<{max_length_key}}                               1
{counter[k]:                                     1
>3}")                                            1
"\n".join(output_list)                           1
Processor:                                       1
reader,                                          1
converter:                                       1
AbstractConverter,                               1
writer):                                         1
self.reader                                      1
reader                                           1
self.converter                                   1
converter                                        1
self.writer                                      1
writer                                           1
process(self):                                   1
input_data                                       1
self.reader.read()                               1
self.converter.convert(input_data)               1
self.writer.write(converted_data)                1
#                                                2
console_length_processor                         1
Processor(ConsoleReader(),                       1
AddLengthConverter(),                            1
ConsoleWriter())                                 1
console_length_processor.process()               1
distinct_word_split_processor                    1
Processor(FileReader("input.txt"),               1
DistinctWordSplitConverter(),                    1
FileWriter("output.txt"))                        1
distinct_word_split_processor.process()          1